@model cooperz_assign01.Models.SnowboardModel
@using cooperz_assign01.ViewModels.ListStatesViewModel;
@using cooperz_assign01.ViewModels.ListExperienceViewModel;
@using cooperz_assign01.ViewModels.ListBoardsViewModel;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>SnowboardModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--Board Model-->
    <div class="form-group">
        @Html.LabelFor(model => model.ModelID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.ModelID, new SelectList(ListBoardsViewModel.BoardList, "ModelID", "ModelName"), "-- Please Select --", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ModelID, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--radio button list-->
    <div class="form-group">
        @Html.LabelFor(model => model.ExperienceLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (Experience experience in ListExperienceViewModel.ExperienceLevel)
            {
                @Html.RadioButtonFor(m => m.ExperienceLevel, experience.Level) @experience.Level
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiscountStudent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DiscountStudent)
                @Html.ValidationMessageFor(model => model.DiscountStudent, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiscountSenior, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DiscountSenior)
                @Html.ValidationMessageFor(model => model.DiscountSenior, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiscountGoldClub, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DiscountGoldClub)
                @Html.ValidationMessageFor(model => model.DiscountGoldClub, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <!--State Dropdown List-->
    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.State, new SelectList(ListStatesViewModel.StateList, "StateAbbr", "StateName"), "Ship to State", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
